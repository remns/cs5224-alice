# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# Shared configuration for all resources, more in
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    # The PermissionsBoundary allows users to safely develop with their function's permissions constrained
    # to their current application. All the functions and roles in this application have to include it and
    # it has to be manually updated when you add resources to your application.
    # More information in https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html
    PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary'
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"    

Parameters:
  AppId:
    Type: String
  dbEnv:
    Type: String
    Description: local or aws
    Default: "aws"

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-courses.js
  getCoursesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-courses.getCoursesHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Get all courses
      Policies:
        # Give Create/Read/Update/Delete Permissions to the table
        - DynamoDBCrudPolicy:
            TableName: !Ref CourseTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          DDB_TABLE: !Ref CourseTable
          dbEnv: !Ref dbEnv
      Events:
        ApiPost:
          Type: Api
          Properties:
            Path: /courses
            Method: POST
        ApiGet:
          Type: Api
          Properties:
            Path: /courses
            Method: GET

  getUniversitiesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-universities.getUniversitiesHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Get all universities
      Events:
        Api:
          Type: Api
          Properties:
            Path: /universities
            Method: GET
            
  getInterestsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-interests.getInterestsHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Get all interests
      Events:
        Api:
          Type: Api
          Properties:
            Path: /interests
            Method: GET

  getJuniorCollegesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-jc.getJcHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Get all JCs
      Events:
        Api:
          Type: Api
          Properties:
            Path: /juniorcolleges
            Method: GET

  getPolytechnicsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-polytechnic.getPolytechnicHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Get all Polytechnics
      Events:
        Api:
          Type: Api
          Properties:
            Path: /polytechnics
            Method: GET

  getGesStatisticsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-statistics.getStatisticsHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Get statistical ges data
      Policies:
        # Give Create/Read/Update/Delete Permissions to the table
        - DynamoDBCrudPolicy:
            TableName: !Ref CourseTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          DDB_TABLE: !Ref CourseTable
          dbEnv: !Ref dbEnv
      Events:
        Api:
          Type: Api
          Properties:
            Path: /statistics
            Method: GET

  trackCourseClicksFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/track-course-clicks.trackCourseClicksHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Track course clicks
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ClicksTable2
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          DDB_TABLE: !Ref ClicksTable2
          dbEnv: !Ref dbEnv
      Events:
        Api:
          Type: Api
          Properties:
            Path: /track/course
            Method: POST

  getCourseClicksFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get-course-clicks.getCourseClicksHandler
      Runtime: nodejs10.x
      MemorySize: 128
      Timeout: 60
      Description: Get course clicks
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ClicksTable2
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          DDB_TABLE: !Ref ClicksTable2
          dbEnv: !Ref dbEnv
      Events:
        Api:
          Type: Api
          Properties:
            Path: /statistics-clicks
            Method: GET


  CourseTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: Id
          AttributeType: N
      BillingMode: PROVISIONED
      KeySchema: 
        - 
          AttributeName: Id
          KeyType: HASH        
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 5
      TableName: AliceCourseTable2

  ClicksTable2:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: CourseId
          AttributeType: N
        - 
          AttributeName: Clicks
          AttributeType: N
        - 
          AttributeName: GsiPk
          AttributeType: N
      KeySchema: 
        - 
          AttributeName: CourseId
          KeyType: HASH
      BillingMode: PROVISIONED
      GlobalSecondaryIndexes: 
        - 
          IndexName: "ClicksIndex2"
          KeySchema: 
            - 
              AttributeName: "GsiPk"
              KeyType: "HASH"
            - 
              AttributeName: "Clicks"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      # LocalSecondaryIndexes: 
      #   - LocalSecondaryIndex          
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TableName: AliceClicksTable2